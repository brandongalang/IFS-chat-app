name: docs-update-ai
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  docs-update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Install OpenCode
        if: ${{ secrets.GOOGLE_API_KEY != '' }}
        run: |
          curl -fsSL https://opencode.ai/install | bash
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          
          # Clean install - remove any existing config that might cause issues
          rm -rf ~/.opencode/config.toml || true
      
      - name: Test OpenCode Installation
        if: ${{ secrets.GOOGLE_API_KEY != '' }}
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: |
          # Test basic functionality first
          opencode -v
          
          # List available agents to verify our custom agent is accessible
          opencode agent list || echo "Agent listing failed, but continuing"
          
          # Test with simple prompt to verify Gemini connection
          opencode -p "Hello, respond with just 'OpenCode working'" || echo "OpenCode test failed, proceeding anyway"
      
      - name: Analyze Changes and Update Docs
        if: ${{ secrets.GOOGLE_API_KEY != '' }}
        env:
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_SHA: ${{ github.sha }}
          GITHUB_EVENT_PATH: ${{ github.event_path }}
        run: node .github/scripts/docs-update-ai.mjs
      
      - name: Check for documentation changes
        id: docs-check
        run: |
          if [ -n "$(git diff --name-only docs/)" ]; then
            echo "has-changes=true" >> $GITHUB_OUTPUT
            echo "Documentation changes detected:"
            git diff --name-only docs/
          else
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "No documentation changes needed"
          fi
      
      - name: Commit Documentation Updates
        if: steps.docs-check.outputs.has-changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action Bot"
          
          git add docs/
          git commit -F - << 'MSG'
          docs: AI-powered documentation updates

          ðŸ¤– Automated documentation updates based on PR changes
          - Analyzed code changes using OpenCode + Gemini 2.5 Flash  
          - Updated existing documentation to reflect implementation changes
          - Added new feature documentation where needed
          - Updated code paths and API references

          Co-authored-by: OpenCode AI <opencode@ai>
          MSG

          git push
      
      - name: Add PR Comment
        if: steps.docs-check.outputs.has-changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const changedFiles = await github.rest.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: '${{ github.event.pull_request.base.sha }}',
              head: context.sha
            });
            
            const docsFiles = changedFiles.data.files
              .filter(file => file.filename.startsWith('docs/'))
              .map(file => `- \`${file.filename}\``)
              .join('\n');
            
            if (docsFiles) {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## ðŸ¤– Documentation Auto-Updated

I've analyzed your code changes and automatically updated the following documentation:

${docsFiles}

The updates include:
- âœ… Updated code paths and implementation details  
- âœ… Added documentation for new features where needed
- âœ… Maintained existing structure and formatting
- âœ… Updated API references and examples

*Powered by OpenCode + Gemini 2.5 Flash*`
              });
            }
      
      - name: Run Traditional Docs Check
        if: steps.docs-check.outputs.has-changes == 'false'
        env:
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_SHA: ${{ github.sha }}
        run: |
          echo "No AI updates made, running traditional docs check..."
          node .github/scripts/docs-check.mjs