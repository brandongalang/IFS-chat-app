{"id":"ifs-chat-app-12","title":"Gate markdown snapshots on flag","description":"Gate memory markdown snapshot hydration behind a feature flag to avoid unintended loads; align with PRD-first data flow.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-17T02:03:37Z","updated_at":"2025-10-17T02:03:37Z","closed_at":"2025-10-17T02:03:37Z"}
{"id":"ifs-chat-app-13","title":"Migrate onboarding synthesis to PRD (remove markdown edits)","description":"Move onboarding synthesis flow to PRD-backed path and remove legacy markdown edit behavior.","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-17T01:53:31Z","updated_at":"2025-10-17T01:53:31Z","closed_at":"2025-10-17T01:53:31Z"}
{"id":"ifs-chat-app-1","title":"Map current schema \u0026 tools vs PRD","description":"Inventory existing database schema, materialized views, and agent tooling. Produce comparison against master-data-schema PRD to surface gaps and clarifications.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T11:22:42.491524-04:00","updated_at":"2025-10-16T15:21:59.460661-04:00","closed_at":"2025-10-14T11:35:59.643158-04:00"}
{"id":"ifs-chat-app-10","title":"Delete orphaned System 1 parts implementation","description":"Remove the unused lib/parts/ implementation and related tooling now that PRD schema is primary. Reference docs/planning/next/tech-cleanup-system-1-orphaned-parts.md for background.","design":"## Plan\n- Confirm no imports of lib/parts/* or part-content-tools via rg\n- Delete lib/parts/ directory, mastra/tools/part-content-tools.ts, and content/parts/\n- Run npm run lint, npm run typecheck to ensure no regressions\n","acceptance_criteria":"- All System 1 files deleted (lib/parts/*, mastra/tools/part-content-tools.ts, content/parts/)\n- Repository builds cleanly (lint/typecheck/tests) with no references to the removed modules\n- Planning doc updated/archived as needed","notes":"- [x] Verified System 1 files already removed in commit 6e076bf\n- [x] Archived plan to docs/archive via PR #336\n- [x] Lint + typecheck (npm run lint, npm run typecheck)","status":"closed","priority":3,"issue_type":"task","created_at":"2025-10-16T18:53:55.732033-04:00","updated_at":"2025-10-16T19:26:31.07678-04:00","closed_at":"2025-10-16T19:26:31.07678-04:00"}
{"id":"ifs-chat-app-11","title":"Implement inbox-to-chat bridge flow","description":"Build the inbox-to-chat bridge described in docs/planning/next/feat-inbox-to-chat-bridge.md: actioned inbox observations should offer a CTA that launches chat with contextual system instructions.","design":"## Plan\n1. Extend inbox action pipeline:\n   - Update lib/data/inbox-actions.ts and API routes to persist action metadata needed for chat handoff.\n   - Add client-side state in InboxShelf/InboxCard components to show Explore CTA after confirm/deny.\n2. Create chat bridge module (lib/inbox/chat-bridge.ts) handling sessionStorage context, CTA wiring, and analytics events.\n3. Update EtherealChat/useChat initialization to detect stored context, inject system instruction for first agent turn, and clear context after use.\n4. Remove static welcome message, ensuring direct chat opens with empty canvas when no context exists.\n5. Add tests: unit coverage for chat-bridge helper, integration/UI coverage for CTA flow, e2e if feasible.\n","acceptance_criteria":"- Confirmed/Dismissed inbox cards surface Explore CTA with correct copy.\n- Clicking Explore launches chat and agent opens with context-specific system instruction (confirmation vs denial).\n- Direct chat entry (without CTA) continues to show empty canvas.\n- SessionStorage clears after use; stale context (\u003e5 min) ignored.\n- \n\u003e ifs-therapy-nextjs@0.1.0 lint\n\u003e next lint\n\n   \nYour tsconfig.json extends another configuration, which means we cannot add the Next.js TypeScript plugin automatically. To improve your development experience, we recommend adding the Next.js plugin (`\"plugins\": [{ \"name\": \"next\" }]`) manually to your TypeScript configuration. Learn more: https://nextjs.org/docs/app/api-reference/config/typescript#the-typescript-plugin\n\n✔ No ESLint warnings or errors, \n\u003e ifs-therapy-nextjs@0.1.0 typecheck\n\u003e tsc -p tsconfig.typecheck.json --noEmit, and targeted tests (unit/integration) pass.\n- Documentation/implementation log updated and docs check green.","status":"open","priority":1,"issue_type":"feature","created_at":"2025-10-16T18:55:44.802682-04:00","updated_at":"2025-10-16T18:55:44.802682-04:00"}
{"id":"ifs-chat-app-2","title":"Design migration plan for PRD schema","description":"Draft ERD and phased migration plan covering core tables, computed views, materialized cache, and rollout sequencing. Capture dependencies, feature-flag strategy, and outstanding questions.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T11:23:01.163962-04:00","updated_at":"2025-10-16T15:21:59.461576-04:00","closed_at":"2025-10-14T11:35:59.656145-04:00","dependencies":[{"issue_id":"ifs-chat-app-2","depends_on_id":"ifs-chat-app-1","type":"blocks","created_at":"2025-10-14T11:38:56.416823-04:00","created_by":"brandongalang"}]}
{"id":"ifs-chat-app-3","title":"Implement core SQL migrations for PRD tables","description":"Create Supabase migrations for observations, parts_v2, sessions_v2, part_relationships_v2, timeline_events, indexes, and triggers per PRD. Implementation tracked in PR #318 (docs updated, docs CI green).","design":"Implement SQL exactly as per PRD; views reference *_v2 tables; materialized view aggregated JSON for warm start; provide refresh_user_context_cache() without scheduling; add typed server helpers for CRUD (parts, observations, sessions, relationships, timeline).","acceptance_criteria":"• Supabase migrations 111/112 implement parts_v2, sessions_v2, observations, part_relationships_v2, timeline_events, views, and user_context_cache with RLS, indexes, triggers. • TypeScript data-access wrappers under lib/data/schema validated with Zod. • Docs updated to reflect new schema and context cache; PR description matches template; typecheck passes.","notes":"Completed via PR #318 (feat: PRD schema groundwork).\nSupabase migrations 111/112 added parts_v2, sessions_v2, observations, part_relationships_v2, timeline_events plus indexes/RLS/triggers.\nlib/data/schema module now hosts typed Zod validators and server helpers; docs updated alongside PR.\nValidation tracked in PR: npm run lint, npm run typecheck, npm run migrations:verify.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T11:23:16.662933-04:00","updated_at":"2025-10-16T16:10:24.079402-04:00","dependencies":[{"issue_id":"ifs-chat-app-3","depends_on_id":"ifs-chat-app-2","type":"blocks","created_at":"2025-10-14T11:38:56.426963-04:00","created_by":"brandongalang"}]}
{"id":"ifs-chat-app-4","title":"Build computed views and context cache","description":"Implement parts_display, timeline_display, and user_context_cache materialized view with refresh strategy aligning with PRD performance targets.","design":"Define parts_display joining parts_v2, relationships, and observations for user-scoped summaries; define timeline_display over timeline_events with typed categories; implement user_context_cache as aggregated JSON (parts, recent events, session summary) keyed by user_id; provide refresh helper function (no scheduler yet).","acceptance_criteria":"• parts_display and timeline_display SQL views exist and return expected columns. • user_context_cache materialized view created with refresh_user_context_cache() helper; manual refresh verified. • RLS and indexes validated; docs updated to reference migrations. • Query latency within PRD targets for typical limits.","notes":"Completed via PR #324 (feat: refine PRD context views).\nMigrations 112/113 landed with indexes, materialized cache, and refresh helper.\nDocs verified: docs/current/operations/user-memory.md, docs/current/operations/runbooks/memory-cron-vercel.md.\nValidated with npm run migrations:verify, npm run lint, npm run test:unit.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T11:23:23.363137-04:00","updated_at":"2025-10-16T15:58:47.996752-04:00","dependencies":[{"issue_id":"ifs-chat-app-4","depends_on_id":"ifs-chat-app-3","type":"blocks","created_at":"2025-10-14T11:38:56.435313-04:00","created_by":"brandongalang"}]}
{"id":"ifs-chat-app-5","title":"Update application services for new schema","description":"Refactor ORM queries, services, and background workers to use PRD tables/views, including session summarizer, cache refresh, and guardrails.","design":"Refactor services to depend on typed server wrappers (parts, observations, sessions, relationships, timeline). Update background jobs to write timeline_events and observations; ensure user scoping. Replace legacy markdown lookups with PRD queries where applicable; keep storage adapter only for snapshots until cutover.","acceptance_criteria":"• Application services and API routes use lib/data/schema server helpers for CRUD and queries. • Session summarizer reads/writes PRD tables; legacy paths removed or flagged. • Context cache refresh path is callable and documented. • Typecheck + unit tests pass; no regressions in chat, inbox, or onboarding flows.","notes":"Completed via PR #326 (Complete bead ifs-chat-app-5: Migrate app services to PRD schema).\nRefactored check-ins, session service, inbox actions, proposals, and parts sync to PRD helpers.\nValidation: npm run typecheck, npm run lint, npm test (unit suite) all green.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T11:23:30.551851-04:00","updated_at":"2025-10-16T15:59:00.700902-04:00","dependencies":[{"issue_id":"ifs-chat-app-5","depends_on_id":"ifs-chat-app-3","type":"blocks","created_at":"2025-10-14T11:38:56.442771-04:00","created_by":"brandongalang"},{"issue_id":"ifs-chat-app-5","depends_on_id":"ifs-chat-app-4","type":"blocks","created_at":"2025-10-14T11:38:56.449807-04:00","created_by":"brandongalang"}]}
{"id":"ifs-chat-app-6","title":"Refactor agent tools to PRD interfaces","description":"Implement WriteTherapyData, QueryTherapyData, UpdateTherapyData, and GetSessionContext tools with validation, auth scoping, and backward-compatibility plan.","design":"Provide Mastra factory helpers that receive userId and the shared Supabase client; wrap lib/data/schema operations. Define minimal inputs/outputs per PRD; prefer ids over names; add input validation and error normalization. Ensure tools are side-effect safe and idempotent where applicable.","acceptance_criteria":"• Implement WriteTherapyData, QueryTherapyData, UpdateTherapyData, GetSessionContext tools bound to PRD schema. • Enforce auth scoping via server-derived userId. • Backward-compat shims for any remaining markdown consumers. • Tool outputs documented and validated with Zod; tests added.","notes":"Completed via PR #330 (Implement PRD-based therapy data tools).\nMastra therapy tools now wrap PRD schema, Zod schemas defined in lib/data/therapy-tools.schema.ts, unit tests added.\nValidation: npm run lint, npm run typecheck, npm run test:unit.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T11:23:46.337295-04:00","updated_at":"2025-10-16T15:59:16.772487-04:00","dependencies":[{"issue_id":"ifs-chat-app-6","depends_on_id":"ifs-chat-app-5","type":"blocks","created_at":"2025-10-14T11:38:56.456765-04:00","created_by":"brandongalang"}]}
{"id":"ifs-chat-app-7","title":"Migrate legacy data into PRD schema","description":"Build and run backfill scripts to import existing markdown/legacy records into new tables, with validation and parity reports.","design":"Build Node script(s) to enumerate storage (memory-snapshots) and map entities to parts_v2, observations, relationships, and timeline_events. Validate UUIDs and required fields; batch inserts; verify with counts. Record migration logs for audit. Gate writes behind explicit flag.","acceptance_criteria":"• Backfill script migrates legacy markdown data into PRD tables with parity report (counts and spot-checks). • Idempotent re-runs safe. • No duplicate parts/sessions; relationships deduped. • Rollback plan documented; dry-run mode available.","notes":"Completed via PR #327 (PRD schema backfill script) with follow-up docstrings in PR #329.\nIntroduced scripts/backfill-prd-schema.ts supporting dry-run/execute, parity reporting, and rollback docs under docs/planning/implementation/.\nValidation: npm run lint, npm run typecheck, dry-run execution smoke tested.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T11:23:58.344172-04:00","updated_at":"2025-10-16T15:59:28.250215-04:00","dependencies":[{"issue_id":"ifs-chat-app-7","depends_on_id":"ifs-chat-app-3","type":"blocks","created_at":"2025-10-14T11:38:56.463871-04:00","created_by":"brandongalang"},{"issue_id":"ifs-chat-app-7","depends_on_id":"ifs-chat-app-5","type":"blocks","created_at":"2025-10-14T11:38:56.469919-04:00","created_by":"brandongalang"}]}
{"id":"ifs-chat-app-8","title":"Expand tests and observability for PRD migration","description":"Add automated tests across schema, tooling, and background jobs, plus monitoring/logging for cache refreshes, summarization, and query latency.","design":"Add unit tests for lib/data/schema and server wrappers; integration tests for typical flows (create part, record observation, session lifecycle, relationship upsert, timeline). Instrument key jobs with logs and (if available) metrics; add dashboards or log queries for triage.","acceptance_criteria":"• Tests cover schema accessors, agent tools, and background jobs; CI green. • Observability: logs/metrics for cache refresh, summarization, and query latency. • Error paths return actionable messages; SLOs documented.","notes":"Completed via PR #328 (Add observability logging and unit tests for PRD schema operations).\nAugmented server helpers with structured logging/timing, added prd-schema-operations unit suite to npm run test:unit.\nValidation: npm run lint, npm run typecheck, npm run test:unit.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T11:24:06.986281-04:00","updated_at":"2025-10-16T15:59:40.125051-04:00","dependencies":[{"issue_id":"ifs-chat-app-8","depends_on_id":"ifs-chat-app-3","type":"blocks","created_at":"2025-10-14T11:38:56.475641-04:00","created_by":"brandongalang"},{"issue_id":"ifs-chat-app-8","depends_on_id":"ifs-chat-app-5","type":"blocks","created_at":"2025-10-14T11:38:56.481727-04:00","created_by":"brandongalang"}]}
{"id":"ifs-chat-app-9","title":"Plan rollout and deprecate legacy schema","description":"Define cutover checklist, dual-write/flag strategy, staging validation, and removal of legacy markdown paths once PRD schema is live.","design":"Prepare rollout checklist including feature flags (if any), backup/export steps, monitoring during cut, and verification steps. Remove legacy markdown write paths; keep snapshot readers only if needed. Final cleanup migration removes deprecated structures after stability window.}","acceptance_criteria":"• Cutover plan executed: app reads/writes PRD schema; markdown paths retired. • Rollback plan defined. • Docs/runbooks updated; team notified. • Post-cut verification complete (smoke tests, metrics).","notes":"- [x] Audit legacy parts/markdown usage\n- [x] Migrate client data access to PRD schema\n- [x] Retire markdown write tooling and update agent wiring\n- [x] Update docs and run validations","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-14T11:24:16.037108-04:00","updated_at":"2025-10-16T18:10:38.620273-04:00","dependencies":[{"issue_id":"ifs-chat-app-9","depends_on_id":"ifs-chat-app-6","type":"blocks","created_at":"2025-10-14T11:38:56.48793-04:00","created_by":"brandongalang"},{"issue_id":"ifs-chat-app-9","depends_on_id":"ifs-chat-app-7","type":"blocks","created_at":"2025-10-14T11:38:56.493994-04:00","created_by":"brandongalang"},{"issue_id":"ifs-chat-app-9","depends_on_id":"ifs-chat-app-8","type":"blocks","created_at":"2025-10-14T11:38:56.499801-04:00","created_by":"brandongalang"}]}
